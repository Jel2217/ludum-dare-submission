[gd_scene load_steps=15 format=2]

[ext_resource path="res://Font/fontt.tres" type="DynamicFont" id=1]
[ext_resource path="res://Scripts/VolumeSlider.gd" type="Script" id=2]
[ext_resource path="res://Images/UI/Knob 16x16.png" type="Texture" id=3]

[sub_resource type="StyleBoxFlat" id=16]
bg_color = Color( 0.294118, 0.282353, 0.282353, 1 )

[sub_resource type="StyleBoxFlat" id=17]
bg_color = Color( 0.172549, 0.172549, 0.172549, 1 )

[sub_resource type="StyleBoxEmpty" id=18]

[sub_resource type="StyleBoxEmpty" id=19]

[sub_resource type="StyleBoxFlat" id=20]
bg_color = Color( 0.360784, 0.360784, 0.360784, 1 )

[sub_resource type="GDScript" id=21]
script/source = "extends HSlider


export var audio_bus_name := \"Music\"
var volume_file = \"user://volmusic.save\"

onready var _bus := AudioServer.get_bus_index(audio_bus_name)


func _ready() -> void:
	value = load_vol()
	AudioServer.set_bus_volume_db(_bus, linear2db(value))
	


func _on_Volume_value_changed(value: float):
	save_vol(value)
	AudioServer.set_bus_volume_db(_bus, linear2db(value*2))
#	$\"../../AudioStreamPlayer\".volume_db = linear2db(value)


func _on_Volume_mouse_exited():
	release_focus()

func save_vol(volume):
	var file = File.new()
	file.open(volume_file, File.WRITE)
	file.store_var(volume)
	file.close()
	
func load_vol():
	var file = File.new()
	if file.file_exists(volume_file):
		file.open(volume_file, File.READ)
		var volume = file.get_var()
		file.close()
		return volume
	else:
		var volume = 1.0
		return volume
"

[sub_resource type="StyleBoxFlat" id=22]
bg_color = Color( 0.392157, 0.0862745, 0.0862745, 1 )

[sub_resource type="StyleBoxFlat" id=23]
bg_color = Color( 0.596078, 0.0666667, 0.0666667, 1 )

[sub_resource type="StyleBoxEmpty" id=24]

[sub_resource type="StyleBoxEmpty" id=25]

[sub_resource type="StyleBoxFlat" id=26]
bg_color = Color( 0.815686, 0.235294, 0.235294, 1 )

[node name="Settings" type="VBoxContainer"]
margin_left = 80.0
margin_top = 50.0
margin_right = 560.0
margin_bottom = 310.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Fullscreen" type="Button" parent="."]
margin_right = 480.0
margin_bottom = 57.0
custom_styles/hover = SubResource( 16 )
custom_styles/pressed = SubResource( 17 )
custom_styles/focus = SubResource( 18 )
custom_styles/disabled = SubResource( 19 )
custom_styles/normal = SubResource( 20 )
custom_fonts/font = ExtResource( 1 )
text = "Fullscreen: OFF"

[node name="Volume Label" type="Label" parent="."]
margin_top = 61.0
margin_right = 480.0
margin_bottom = 118.0
custom_fonts/font = ExtResource( 1 )
text = "Music Volume"
align = 1

[node name="Volume" type="HSlider" parent="."]
margin_top = 122.0
margin_right = 480.0
margin_bottom = 138.0
custom_icons/grabber_disabled = ExtResource( 3 )
custom_icons/grabber_highlight = ExtResource( 3 )
custom_icons/grabber = ExtResource( 3 )
max_value = 1.0
step = 0.05
value = 1.0
script = SubResource( 21 )

[node name="Volume Label2" type="Label" parent="."]
margin_top = 142.0
margin_right = 480.0
margin_bottom = 199.0
custom_fonts/font = ExtResource( 1 )
text = "SFX Volume"
align = 1

[node name="Volume2" type="HSlider" parent="."]
margin_top = 203.0
margin_right = 480.0
margin_bottom = 219.0
custom_icons/grabber_disabled = ExtResource( 3 )
custom_icons/grabber_highlight = ExtResource( 3 )
custom_icons/grabber = ExtResource( 3 )
max_value = 1.0
step = 0.05
value = 1.0
script = ExtResource( 2 )

[node name="Back" type="Button" parent="."]
margin_top = 223.0
margin_right = 480.0
margin_bottom = 280.0
focus_mode = 0
custom_styles/hover = SubResource( 22 )
custom_styles/pressed = SubResource( 23 )
custom_styles/focus = SubResource( 24 )
custom_styles/disabled = SubResource( 25 )
custom_styles/normal = SubResource( 26 )
custom_fonts/font = ExtResource( 1 )
enabled_focus_mode = 0
text = "Back"

[connection signal="mouse_exited" from="Volume" to="Volume" method="_on_Volume_mouse_exited"]
[connection signal="value_changed" from="Volume" to="Volume" method="_on_Volume_value_changed"]
[connection signal="mouse_exited" from="Volume2" to="Volume2" method="_on_Volume_mouse_exited"]
[connection signal="value_changed" from="Volume2" to="Volume2" method="_on_Volume_value_changed"]
